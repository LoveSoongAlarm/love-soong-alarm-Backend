name: CICD - DockerHub Build & Push

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: lovesoongalarm/lovesoongalarm

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR
        run: |
          chmod +x ./gradlew
          ./gradlew clean bootJar

      - name: DockerHub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Buildx 설치 및 멀티 플랫폼 빌드
        run: |
          docker buildx create --use --name test-builder || docker buildx use test-builder
          docker buildx inspect --bootstrap
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t $DOCKER_IMAGE:latest \
            --push .

  cd:
    needs: [ci]
    runs-on: ubuntu-latest
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      ACCESS_TOKEN_EXPIRATION: ${{ secrets.ACCESS_TOKEN_EXPIRATION }}
      REFRESH_TOKEN_EXPIRATION: ${{ secrets.REFRESH_TOKEN_EXPIRATION }}
      DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
      KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
      KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
      KAKAO_REDIRECT_URI: ${{ secrets.KAKAO_REDIRECT_URI }}
      REDIRECT_URL: ${{ secrets.REDIRECT_URL }}
      KAKAO_KEY: ${{ secrets.KAKAO_KEY }}
      STRIPE_SECRET: ${{ secrets.STRIPE_SECRET }}
      STRIPE_SUCCESS_URL: ${{ secrets.STRIPE_SUCCESS_URL }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      PROD_PREPASS: ${{ secrets.PROD_PREPASS }}
      PROD_CHAT_TICKET: ${{ secrets.PROD_CHAT_TICKET }}
      PROD_SLOT1: ${{ secrets.PROD_SLOT1 }}
      PROD_SLOT2: ${{ secrets.PROD_SLOT2 }}
      PROD_SLOT3: ${{ secrets.PROD_SLOT3 }}
      STRIPE_CANCEL_URL: ${{secrets.STRIPE_CANCEL_URL}}


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USER }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "~/deploy/"
    
      - name: SSH 접속 및 배포
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USER }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          envs: DB_URL,DB_USERNAME,DB_PASSWORD,REDIS_PASSWORD, ACCESS_TOKEN_EXPIRATION, DOMAIN_NAME, JWT_SECRET, KAKAO_CLIENT_ID, KAKAO_CLIENT_SECRET, KAKAO_REDIRECT_URI, REDIRECT_URL, REFRESH_TOKEN_EXPIRATION, KAKAO_KEY, STRIPE_SECRET,STRIPE_SUCCESS_URL,STRIPE_WEBHOOK_SECRET,PROD_PREPASS,PROD_CHAT_TICKET,PROD_SLOT1,PROD_SLOT2,PROD_SLOT3, STRIPE_CANCEL_URL
          script: |
            cd ~/deploy
            ./composedeploy.sh
